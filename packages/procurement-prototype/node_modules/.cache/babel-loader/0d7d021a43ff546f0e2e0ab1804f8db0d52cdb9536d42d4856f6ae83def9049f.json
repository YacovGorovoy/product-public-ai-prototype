{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yacov.gorovoy\\\\Documents\\\\Cursor-workspace\\\\procurement-prototype\\\\src\\\\components\\\\ProcessFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\r\n * ProcessFlow component for visualizing sequential and parallel steps.\r\n * @param {Array} steps - Array of steps. Each step can be:\r\n *   - { label, status, icon, names, tooltip }\r\n *   - Or an array of such objects for parallel steps\r\n *\r\n * status: 'completed' | 'current' | 'pending'\r\n * icon: ReactNode (optional)\r\n * names: string | string[] (optional)\r\n * tooltip: string | ReactNode (optional)\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProcessFlow({\n  steps = []\n}) {\n  _s();\n  // Tooltip state\n  const [tooltip, setTooltip] = useState({\n    show: false,\n    content: null,\n    x: 0,\n    y: 0\n  });\n\n  // Helper to render a single step\n  const renderStep = (step, idx) => {\n    const handleMouseEnter = e => {\n      if (step.tooltip) {\n        const rect = e.currentTarget.getBoundingClientRect();\n        setTooltip({\n          show: true,\n          content: step.tooltip,\n          x: rect.left + rect.width / 2,\n          y: rect.top\n        });\n      }\n    };\n    const handleMouseLeave = () => setTooltip({\n      show: false,\n      content: null,\n      x: 0,\n      y: 0\n    });\n    let borderColor = 'border-gray-300';\n    let bgColor = 'bg-white';\n    let textColor = 'text-gray-500';\n    if (step.status === 'completed') {\n      borderColor = 'border-green-500';\n      bgColor = 'bg-green-500';\n      textColor = 'text-green-700';\n    } else if (step.status === 'current') {\n      borderColor = 'border-black';\n      bgColor = 'bg-white';\n      textColor = 'text-black';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center min-w-[120px] relative group cursor-pointer\",\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `w-5 h-5 rounded-full border-2 flex items-center justify-center transition-all duration-150 ${bgColor} ${borderColor}`,\n          children: step.icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-4 flex items-center justify-center\",\n            children: step.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-2.5 h-2.5 rounded-full block ${step.status === 'completed' ? 'bg-white' : step.status === 'current' ? 'bg-black' : 'bg-gray-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `font-semibold text-sm ${textColor}`,\n          children: step.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), step.names && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-400 mt-0.5 text-center\",\n        children: Array.isArray(step.names) ? step.names.join(', ') : step.names\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), step.subLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-400 mt-0.5\",\n        children: step.subLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper to render a group of parallel steps (vertically stacked)\n  const renderParallel = (group, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center relative gap-4\",\n    children: group.map(renderStep)\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n\n  // Render the flow\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-4 py-6 px-2 bg-gray-50 rounded-lg overflow-x-auto relative\",\n    children: [steps.map((step, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [Array.isArray(step) ? renderParallel(step, idx) : renderStep(step, idx), idx < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 h-0.5 bg-gray-200 mx-2 min-w-[32px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)), tooltip.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed z-50 px-3 py-2 text-sm text-white bg-gray-900 rounded-lg shadow-lg whitespace-nowrap\",\n      style: {\n        left: tooltip.x,\n        top: tooltip.y - 40,\n        transform: 'translate(-50%, -100%)'\n      },\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ProcessFlow, \"LEAnR9ip9G8gFZM729kfHEDVreg=\");\n_c = ProcessFlow;\nvar _c;\n$RefreshReg$(_c, \"ProcessFlow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProcessFlow","steps","_s","tooltip","setTooltip","show","content","x","y","renderStep","step","idx","handleMouseEnter","e","rect","currentTarget","getBoundingClientRect","left","width","top","handleMouseLeave","borderColor","bgColor","textColor","status","className","onMouseEnter","onMouseLeave","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","label","names","Array","isArray","join","subLabel","renderParallel","group","map","Fragment","length","style","transform","_c","$RefreshReg$"],"sources":["C:/Users/yacov.gorovoy/Documents/Cursor-workspace/procurement-prototype/src/components/ProcessFlow.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n/**\r\n * ProcessFlow component for visualizing sequential and parallel steps.\r\n * @param {Array} steps - Array of steps. Each step can be:\r\n *   - { label, status, icon, names, tooltip }\r\n *   - Or an array of such objects for parallel steps\r\n *\r\n * status: 'completed' | 'current' | 'pending'\r\n * icon: ReactNode (optional)\r\n * names: string | string[] (optional)\r\n * tooltip: string | ReactNode (optional)\r\n */\r\nexport default function ProcessFlow({ steps = [] }) {\r\n  // Tooltip state\r\n  const [tooltip, setTooltip] = useState({ show: false, content: null, x: 0, y: 0 });\r\n\r\n  // Helper to render a single step\r\n  const renderStep = (step, idx) => {\r\n    const handleMouseEnter = e => {\r\n      if (step.tooltip) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        setTooltip({\r\n          show: true,\r\n          content: step.tooltip,\r\n          x: rect.left + rect.width / 2,\r\n          y: rect.top\r\n        });\r\n      }\r\n    };\r\n    const handleMouseLeave = () => setTooltip({ show: false, content: null, x: 0, y: 0 });\r\n\r\n    let borderColor = 'border-gray-300';\r\n    let bgColor = 'bg-white';\r\n    let textColor = 'text-gray-500';\r\n    if (step.status === 'completed') {\r\n      borderColor = 'border-green-500';\r\n      bgColor = 'bg-green-500';\r\n      textColor = 'text-green-700';\r\n    } else if (step.status === 'current') {\r\n      borderColor = 'border-black';\r\n      bgColor = 'bg-white';\r\n      textColor = 'text-black';\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={idx}\r\n        className=\"flex flex-col items-center min-w-[120px] relative group cursor-pointer\"\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <div className=\"flex items-center gap-2\">\r\n          {/* Status indicator with icon slot */}\r\n          <span className={`w-5 h-5 rounded-full border-2 flex items-center justify-center transition-all duration-150 ${bgColor} ${borderColor}`}>\r\n            {step.icon ? (\r\n              <span className=\"w-4 h-4 flex items-center justify-center\">{step.icon}</span>\r\n            ) : (\r\n              <span className={`w-2.5 h-2.5 rounded-full block ${step.status === 'completed' ? 'bg-white' : step.status === 'current' ? 'bg-black' : 'bg-gray-300'}`} />\r\n            )}\r\n          </span>\r\n          <span className={`font-semibold text-sm ${textColor}`}>{step.label}</span>\r\n        </div>\r\n        {step.names && (\r\n          <span className=\"text-xs text-gray-400 mt-0.5 text-center\">\r\n            {Array.isArray(step.names) ? step.names.join(', ') : step.names}\r\n          </span>\r\n        )}\r\n        {step.subLabel && <span className=\"text-xs text-gray-400 mt-0.5\">{step.subLabel}</span>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper to render a group of parallel steps (vertically stacked)\r\n  const renderParallel = (group, idx) => (\r\n    <div key={idx} className=\"flex flex-col items-center relative gap-4\">\r\n      {group.map(renderStep)}\r\n    </div>\r\n  );\r\n\r\n  // Render the flow\r\n  return (\r\n    <div className=\"flex items-center gap-4 py-6 px-2 bg-gray-50 rounded-lg overflow-x-auto relative\">\r\n      {steps.map((step, idx) => (\r\n        <React.Fragment key={idx}>\r\n          {Array.isArray(step)\r\n            ? renderParallel(step, idx)\r\n            : renderStep(step, idx)}\r\n          {/* Connector line, except after last step */}\r\n          {idx < steps.length - 1 && (\r\n            <div className=\"flex-1 h-0.5 bg-gray-200 mx-2 min-w-[32px]\" />\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n      {/* Tooltip overlay */}\r\n      {tooltip.show && (\r\n        <div\r\n          className=\"fixed z-50 px-3 py-2 text-sm text-white bg-gray-900 rounded-lg shadow-lg whitespace-nowrap\"\r\n          style={{ left: tooltip.x, top: tooltip.y - 40, transform: 'translate(-50%, -100%)' }}\r\n        >\r\n          {tooltip.content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}