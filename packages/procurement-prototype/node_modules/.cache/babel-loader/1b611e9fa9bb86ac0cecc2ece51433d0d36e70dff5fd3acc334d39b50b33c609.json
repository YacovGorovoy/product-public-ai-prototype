{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yacov.gorovoy\\\\Documents\\\\Cursor-workspace\\\\procurement-prototype\\\\src\\\\components\\\\DropdownMenu.js\";\n// Dropdown menu for actions (e.g., New button)\nimport React from 'react';\n\n/**\r\n * DropdownMenu for actions\r\n * @param {React.ReactNode} buttonContent - Button content\r\n * @param {Array} options - [{ label, icon }]\r\n * @param {boolean} open - Whether the dropdown is open\r\n * @param {function} setOpen - Setter for open state\r\n * @param {string} maxWidth - Tailwind max-width class for label (default 'max-w-xs')\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DropdownMenu({\n  buttonContent,\n  options = [],\n  open,\n  setOpen,\n  maxWidth = 'max-w-xs'\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(!open),\n      className: \"bg-yellow-400 hover:bg-yellow-500 text-gray-900 font-bold rounded px-4 py-2 focus:outline-none shadow\",\n      children: buttonContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 min-w-[16rem] max-w-3xl bg-white rounded-md shadow-lg py-2 z-20 border\",\n      children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: opt.onClick,\n          className: \"w-full flex items-center px-4 py-3 hover:bg-gray-50 transition group\",\n          style: {\n            outline: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center justify-center w-10 h-10 rounded-full bg-gray-100 mr-3\",\n            children: opt.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-medium text-gray-900 text-base overflow-hidden text-ellipsis block whitespace-nowrap ${maxWidth}`,\n            children: opt.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), idx < options.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t mx-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 44\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DropdownMenu","buttonContent","options","open","setOpen","maxWidth","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","idx","Fragment","style","outline","icon","label","length","_c","$RefreshReg$"],"sources":["C:/Users/yacov.gorovoy/Documents/Cursor-workspace/procurement-prototype/src/components/DropdownMenu.js"],"sourcesContent":["// Dropdown menu for actions (e.g., New button)\r\nimport React from 'react';\r\n\r\n/**\r\n * DropdownMenu for actions\r\n * @param {React.ReactNode} buttonContent - Button content\r\n * @param {Array} options - [{ label, icon }]\r\n * @param {boolean} open - Whether the dropdown is open\r\n * @param {function} setOpen - Setter for open state\r\n * @param {string} maxWidth - Tailwind max-width class for label (default 'max-w-xs')\r\n */\r\nexport default function DropdownMenu({ buttonContent, options = [], open, setOpen, maxWidth = 'max-w-xs' }) {\r\n  return (\r\n    <div className=\"relative inline-block text-left\">\r\n      <button\r\n        onClick={() => setOpen(!open)}\r\n        className=\"bg-yellow-400 hover:bg-yellow-500 text-gray-900 font-bold rounded px-4 py-2 focus:outline-none shadow\"\r\n      >\r\n        {buttonContent}\r\n      </button>\r\n      {open && (\r\n        <div className={\"absolute right-0 mt-2 min-w-[16rem] max-w-3xl bg-white rounded-md shadow-lg py-2 z-20 border\"}>\r\n          {options.map((opt, idx) => (\r\n            <React.Fragment key={idx}>\r\n              <button\r\n                onClick={opt.onClick}\r\n                className=\"w-full flex items-center px-4 py-3 hover:bg-gray-50 transition group\"\r\n                style={{ outline: 'none' }}\r\n              >\r\n                <span className=\"flex items-center justify-center w-10 h-10 rounded-full bg-gray-100 mr-3\">\r\n                  {opt.icon}\r\n                </span>\r\n                <span className={`font-medium text-gray-900 text-base overflow-hidden text-ellipsis block whitespace-nowrap ${maxWidth}`}>\r\n                  {opt.label}\r\n                </span>\r\n              </button>\r\n              {idx < options.length - 1 && <div className=\"border-t mx-4\" />}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,eAAe,SAASC,YAAYA,CAAC;EAAEC,aAAa;EAAEC,OAAO,GAAG,EAAE;EAAEC,IAAI;EAAEC,OAAO;EAAEC,QAAQ,GAAG;AAAW,CAAC,EAAE;EAC1G,oBACEN,OAAA;IAAKO,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CR,OAAA;MACES,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAAC,CAACD,IAAI,CAAE;MAC9BG,SAAS,EAAC,uGAAuG;MAAAC,QAAA,EAEhHN;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACRT,IAAI,iBACHJ,OAAA;MAAKO,SAAS,EAAE,8FAA+F;MAAAC,QAAA,EAC5GL,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACpBhB,OAAA,CAACF,KAAK,CAACmB,QAAQ;QAAAT,QAAA,gBACbR,OAAA;UACES,OAAO,EAAEM,GAAG,CAACN,OAAQ;UACrBF,SAAS,EAAC,sEAAsE;UAChFW,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAO,CAAE;UAAAX,QAAA,gBAE3BR,OAAA;YAAMO,SAAS,EAAC,0EAA0E;YAAAC,QAAA,EACvFO,GAAG,CAACK;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACPb,OAAA;YAAMO,SAAS,EAAE,6FAA6FD,QAAQ,EAAG;YAAAE,QAAA,EACtHO,GAAG,CAACM;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,EACRG,GAAG,GAAGb,OAAO,CAACmB,MAAM,GAAG,CAAC,iBAAItB,OAAA;UAAKO,SAAS,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAb3CG,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcR,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACU,EAAA,GAhCuBtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}