{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yacov.gorovoy\\\\Documents\\\\Cursor-workspace\\\\procurement-prototype\\\\src\\\\components\\\\Comment.js\";\n// Comment component for displaying individual comments\nimport React from 'react';\nimport Tag from './Tag';\n\n/**\r\n * Comment component for displaying individual comments\r\n * @param {Object} user - User object with email and optional name\r\n * @param {string} timestamp - Comment timestamp (e.g., \"4 days ago\")\r\n * @param {string} message - Comment message text\r\n * @param {function} onTagClick - Optional callback for tag clicks\r\n * @param {string} className - Additional classes\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comment({\n  user,\n  timestamp,\n  message,\n  onTagClick,\n  className = ''\n}) {\n  // Parse message to find @mentions and create Tag components\n  const parseMessage = text => {\n    const mentionRegex = /@([^\\s]+)/g;\n    const parts = [];\n    let lastIndex = 0;\n    let match;\n    while ((match = mentionRegex.exec(text)) !== null) {\n      // Add text before the mention\n      if (match.index > lastIndex) {\n        parts.push({\n          type: 'text',\n          content: text.substring(lastIndex, match.index)\n        });\n      }\n\n      // Add the mention as a tag\n      parts.push({\n        type: 'mention',\n        content: match[0],\n        email: match[1]\n      });\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add remaining text\n    if (lastIndex < text.length) {\n      parts.push({\n        type: 'text',\n        content: text.substring(lastIndex)\n      });\n    }\n    return parts;\n  };\n  const messageParts = parseMessage(message);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex space-x-3 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-3 h-3 text-blue-600\",\n          fill: \"currentColor\",\n          viewBox: \"0 0 20 20\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 min-w-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-blue-600 truncate\",\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500\",\n          children: timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-700 leading-relaxed\",\n        children: messageParts.map((part, index) => {\n          if (part.type === 'mention') {\n            return /*#__PURE__*/_jsxDEV(Tag, {\n              text: part.content,\n              email: part.email,\n              onClick: () => onTagClick && onTagClick(part.email)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: part.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","Tag","jsxDEV","_jsxDEV","Comment","user","timestamp","message","onTagClick","className","parseMessage","text","mentionRegex","parts","lastIndex","match","exec","index","push","type","content","substring","email","length","messageParts","children","fill","viewBox","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","map","part","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yacov.gorovoy/Documents/Cursor-workspace/procurement-prototype/src/components/Comment.js"],"sourcesContent":["// Comment component for displaying individual comments\r\nimport React from 'react';\r\nimport Tag from './Tag';\r\n\r\n/**\r\n * Comment component for displaying individual comments\r\n * @param {Object} user - User object with email and optional name\r\n * @param {string} timestamp - Comment timestamp (e.g., \"4 days ago\")\r\n * @param {string} message - Comment message text\r\n * @param {function} onTagClick - Optional callback for tag clicks\r\n * @param {string} className - Additional classes\r\n */\r\nexport default function Comment({ \r\n  user, \r\n  timestamp, \r\n  message, \r\n  onTagClick,\r\n  className = '' \r\n}) {\r\n  // Parse message to find @mentions and create Tag components\r\n  const parseMessage = (text) => {\r\n    const mentionRegex = /@([^\\s]+)/g;\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    let match;\r\n\r\n    while ((match = mentionRegex.exec(text)) !== null) {\r\n      // Add text before the mention\r\n      if (match.index > lastIndex) {\r\n        parts.push({\r\n          type: 'text',\r\n          content: text.substring(lastIndex, match.index)\r\n        });\r\n      }\r\n\r\n      // Add the mention as a tag\r\n      parts.push({\r\n        type: 'mention',\r\n        content: match[0],\r\n        email: match[1]\r\n      });\r\n\r\n      lastIndex = match.index + match[0].length;\r\n    }\r\n\r\n    // Add remaining text\r\n    if (lastIndex < text.length) {\r\n      parts.push({\r\n        type: 'text',\r\n        content: text.substring(lastIndex)\r\n      });\r\n    }\r\n\r\n    return parts;\r\n  };\r\n\r\n  const messageParts = parseMessage(message);\r\n\r\n  return (\r\n    <div className={`flex space-x-3 ${className}`}>\r\n      {/* Comment bubble icon */}\r\n      <div className=\"flex-shrink-0\">\r\n        <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center\">\r\n          <svg className=\"w-3 h-3 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n            <path fillRule=\"evenodd\" d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Comment content */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        {/* User info and timestamp */}\r\n        <div className=\"flex items-center space-x-2 mb-1\">\r\n          <span className=\"text-sm font-medium text-blue-600 truncate\">\r\n            {user.email}\r\n          </span>\r\n          <span className=\"text-xs text-gray-500\">\r\n            {timestamp}\r\n          </span>\r\n        </div>\r\n\r\n        {/* Message content */}\r\n        <div className=\"text-sm text-gray-700 leading-relaxed\">\r\n          {messageParts.map((part, index) => {\r\n            if (part.type === 'mention') {\r\n              return (\r\n                <Tag\r\n                  key={index}\r\n                  text={part.content}\r\n                  email={part.email}\r\n                  onClick={() => onTagClick && onTagClick(part.email)}\r\n                />\r\n              );\r\n            }\r\n            return <span key={index}>{part.content}</span>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}