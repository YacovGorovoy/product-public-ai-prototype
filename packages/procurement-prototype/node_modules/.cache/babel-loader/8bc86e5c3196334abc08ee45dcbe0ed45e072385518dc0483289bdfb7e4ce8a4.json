{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yacov.gorovoy\\\\Documents\\\\Cursor-workspace\\\\procurement-prototype\\\\src\\\\components\\\\FormTextarea.js\",\n  _s = $RefreshSig$();\n// FormTextarea for multi-line input\nimport React, { useState, useRef, useEffect } from 'react';\nimport Button from './Button';\n\n/**\r\n * FormTextarea for multi-line input\r\n * @param {string} label - Label text\r\n * @param {string} value - Input value\r\n * @param {function} onChange - Change handler\r\n * @param {string} placeholder - Placeholder text\r\n * @param {boolean} required - Required field\r\n * @param {string} variant - 'editable' or 'inline' (default: 'editable')\r\n * @param {boolean} readOnly - Read-only state (for inline variant)\r\n * @param {function} onSave - Save handler (for inline variant)\r\n * @param {function} onCancel - Cancel handler (for inline variant)\r\n * @param {string} className - Additional classes\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormTextarea({\n  label,\n  value,\n  onChange,\n  placeholder,\n  required,\n  variant = 'editable',\n  readOnly = false,\n  onSave,\n  onCancel,\n  className = '',\n  ...props\n}) {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(value);\n  const textareaRef = useRef(null);\n\n  // Update edit value when prop value changes\n  useEffect(() => {\n    setEditValue(value);\n  }, [value]);\n\n  // Handle click outside to save\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (textareaRef.current && !textareaRef.current.contains(event.target)) {\n        if (isEditing) {\n          handleSave();\n        }\n      }\n    };\n    if (isEditing) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEditing, editValue]);\n  const handleFieldClick = () => {\n    if (variant === 'inline' && readOnly && !isEditing) {\n      setIsEditing(true);\n      setEditValue(value);\n      // Focus the textarea after a brief delay to ensure state is updated\n      setTimeout(() => {\n        var _textareaRef$current;\n        (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n      }, 0);\n    }\n  };\n  const handleSave = () => {\n    if (editValue !== value) {\n      onChange && onChange(editValue);\n      onSave && onSave(editValue);\n    }\n    setIsEditing(false);\n  };\n  const handleCancel = () => {\n    setEditValue(value);\n    setIsEditing(false);\n    onCancel && onCancel();\n  };\n  const handleInputChange = e => {\n    setEditValue(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n      handleSave();\n    } else if (e.key === 'Escape') {\n      handleCancel();\n    }\n  };\n\n  // Determine textarea classes based on state\n  const getTextareaClasses = () => {\n    if (variant === 'inline') {\n      if (readOnly && !isEditing) {\n        return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-gray-50 cursor-pointer hover:bg-gray-100 transition resize-none\";\n      } else if (isEditing) {\n        return \"w-full border !border-[#6C70FF] rounded-xl px-4 py-3 bg-white focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] transition resize-none\";\n      }\n    }\n    return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-white focus:!border-[#6C70FF] focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] hover:bg-gray-50 transition resize-none\";\n  };\n  const renderInlineTextarea = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `relative ${isHovered && readOnly && !isEditing ? 'group' : ''}`,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        value: isEditing ? editValue : value,\n        onChange: isEditing ? handleInputChange : undefined,\n        onKeyDown: isEditing ? handleKeyDown : undefined,\n        placeholder: placeholder,\n        required: required,\n        readOnly: readOnly && !isEditing,\n        onClick: handleFieldClick,\n        className: getTextareaClasses(),\n        rows: 3,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), variant === 'inline' && isHovered && readOnly && !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFieldClick,\n        className: \"absolute right-3 top-3 opacity-0 group-hover:opacity-100 transition-opacity\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4 text-gray-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), variant === 'inline' && isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-10 right-0 flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          className: \"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 text-gray-600\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 text-gray-600\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M5 13l4 4L19 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n  const renderEditableTextarea = () => {\n    return /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder,\n      required: required,\n      className: getTextareaClasses(),\n      rows: 3,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-1 font-medium text-gray-600\",\n      children: [label, required && ' *']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this), variant === 'inline' ? renderInlineTextarea() : renderEditableTextarea()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(FormTextarea, \"EoZrn+KwsX849Xh/ySdfhOg2RNo=\");\n_c = FormTextarea;\nvar _c;\n$RefreshReg$(_c, \"FormTextarea\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","jsxDEV","_jsxDEV","FormTextarea","label","value","onChange","placeholder","required","variant","readOnly","onSave","onCancel","className","props","_s","isHovered","setIsHovered","isEditing","setIsEditing","editValue","setEditValue","textareaRef","handleClickOutside","event","current","contains","target","handleSave","document","addEventListener","removeEventListener","handleFieldClick","setTimeout","_textareaRef$current","focus","handleCancel","handleInputChange","e","handleKeyDown","key","ctrlKey","metaKey","getTextareaClasses","renderInlineTextarea","onMouseEnter","onMouseLeave","children","ref","undefined","onKeyDown","onClick","rows","fileName","_jsxFileName","lineNumber","columnNumber","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d","renderEditableTextarea","_c","$RefreshReg$"],"sources":["C:/Users/yacov.gorovoy/Documents/Cursor-workspace/procurement-prototype/src/components/FormTextarea.js"],"sourcesContent":["// FormTextarea for multi-line input\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Button from './Button';\r\n\r\n/**\r\n * FormTextarea for multi-line input\r\n * @param {string} label - Label text\r\n * @param {string} value - Input value\r\n * @param {function} onChange - Change handler\r\n * @param {string} placeholder - Placeholder text\r\n * @param {boolean} required - Required field\r\n * @param {string} variant - 'editable' or 'inline' (default: 'editable')\r\n * @param {boolean} readOnly - Read-only state (for inline variant)\r\n * @param {function} onSave - Save handler (for inline variant)\r\n * @param {function} onCancel - Cancel handler (for inline variant)\r\n * @param {string} className - Additional classes\r\n */\r\nexport default function FormTextarea({ \r\n  label, \r\n  value, \r\n  onChange, \r\n  placeholder, \r\n  required, \r\n  variant = 'editable',\r\n  readOnly = false,\r\n  onSave,\r\n  onCancel,\r\n  className = '', \r\n  ...props \r\n}) {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editValue, setEditValue] = useState(value);\r\n  const textareaRef = useRef(null);\r\n\r\n  // Update edit value when prop value changes\r\n  useEffect(() => {\r\n    setEditValue(value);\r\n  }, [value]);\r\n\r\n  // Handle click outside to save\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (textareaRef.current && !textareaRef.current.contains(event.target)) {\r\n        if (isEditing) {\r\n          handleSave();\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isEditing) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isEditing, editValue]);\r\n\r\n  const handleFieldClick = () => {\r\n    if (variant === 'inline' && readOnly && !isEditing) {\r\n      setIsEditing(true);\r\n      setEditValue(value);\r\n      // Focus the textarea after a brief delay to ensure state is updated\r\n      setTimeout(() => {\r\n        textareaRef.current?.focus();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (editValue !== value) {\r\n      onChange && onChange(editValue);\r\n      onSave && onSave(editValue);\r\n    }\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditValue(value);\r\n    setIsEditing(false);\r\n    onCancel && onCancel();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setEditValue(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n      handleSave();\r\n    } else if (e.key === 'Escape') {\r\n      handleCancel();\r\n    }\r\n  };\r\n\r\n  // Determine textarea classes based on state\r\n  const getTextareaClasses = () => {\r\n    if (variant === 'inline') {\r\n      if (readOnly && !isEditing) {\r\n        return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-gray-50 cursor-pointer hover:bg-gray-100 transition resize-none\";\r\n      } else if (isEditing) {\r\n        return \"w-full border !border-[#6C70FF] rounded-xl px-4 py-3 bg-white focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] transition resize-none\";\r\n      }\r\n    }\r\n    return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-white focus:!border-[#6C70FF] focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] hover:bg-gray-50 transition resize-none\";\r\n  };\r\n\r\n  const renderInlineTextarea = () => {\r\n    return (\r\n      <div \r\n        className={`relative ${isHovered && readOnly && !isEditing ? 'group' : ''}`}\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={isEditing ? editValue : value}\r\n          onChange={isEditing ? handleInputChange : undefined}\r\n          onKeyDown={isEditing ? handleKeyDown : undefined}\r\n          placeholder={placeholder}\r\n          required={required}\r\n          readOnly={readOnly && !isEditing}\r\n          onClick={handleFieldClick}\r\n          className={getTextareaClasses()}\r\n          rows={3}\r\n          {...props}\r\n        />\r\n        \r\n        {/* Pencil icon on hover (read-only state) */}\r\n        {variant === 'inline' && isHovered && readOnly && !isEditing && (\r\n          <button\r\n            onClick={handleFieldClick}\r\n            className=\"absolute right-3 top-3 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n          >\r\n            <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n            </svg>\r\n          </button>\r\n        )}\r\n\r\n        {/* X and V buttons (editing state) */}\r\n        {variant === 'inline' && isEditing && (\r\n          <div className=\"absolute -bottom-10 right-0 flex space-x-2\">\r\n            <button\r\n              onClick={handleCancel}\r\n              className=\"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\"\r\n            >\r\n              <svg className=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              onClick={handleSave}\r\n              className=\"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\"\r\n            >\r\n              <svg className=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEditableTextarea = () => {\r\n    return (\r\n      <textarea\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        className={getTextareaClasses()}\r\n        rows={3}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {label && <label className=\"block mb-1 font-medium text-gray-600\">{label}{required && ' *'}</label>}\r\n      {variant === 'inline' ? renderInlineTextarea() : renderEditableTextarea()}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}