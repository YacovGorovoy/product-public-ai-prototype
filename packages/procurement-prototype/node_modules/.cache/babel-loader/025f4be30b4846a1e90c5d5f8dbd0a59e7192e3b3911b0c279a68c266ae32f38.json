{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yacov.gorovoy\\\\Documents\\\\Cursor-workspace\\\\procurement-prototype\\\\src\\\\components\\\\FormSelect.js\",\n  _s = $RefreshSig$();\n// FormSelect for dropdowns\nimport React, { useState, useRef, useEffect } from 'react';\nimport Button from './Button';\n\n/**\r\n * FormSelect for dropdowns\r\n * @param {string} label - Label text\r\n * @param {string} value - Selected value\r\n * @param {function} onChange - Change handler\r\n * @param {array} options - Array of {label, value} objects\r\n * @param {string} placeholder - Placeholder text\r\n * @param {boolean} required - Required field\r\n * @param {string} variant - 'editable' or 'inline' (default: 'editable')\r\n * @param {boolean} readOnly - Read-only state (for inline variant)\r\n * @param {function} onSave - Save handler (for inline variant)\r\n * @param {function} onCancel - Cancel handler (for inline variant)\r\n * @param {string} className - Additional classes\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormSelect({\n  label,\n  value,\n  onChange,\n  options = [],\n  placeholder = \"Select an option\",\n  required = false,\n  variant = 'editable',\n  readOnly = false,\n  onSave,\n  onCancel,\n  className = ''\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(value);\n  const selectRef = useRef(null);\n\n  // Update edit value when prop value changes\n  useEffect(() => {\n    setEditValue(value);\n  }, [value]);\n\n  // Handle click outside to save\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        if (isEditing) {\n          handleSave();\n        }\n        setIsOpen(false);\n      }\n    };\n    if (isOpen || isEditing) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, isEditing, editValue]);\n  const handleFieldClick = () => {\n    if (variant === 'inline' && readOnly && !isEditing) {\n      setIsEditing(true);\n      setEditValue(value);\n      // Auto-open dropdown when entering edit mode\n      setIsOpen(true);\n    } else if (variant === 'editable' || variant === 'inline' && isEditing) {\n      setIsOpen(!isOpen);\n    }\n  };\n  const handleOptionClick = optionValue => {\n    if (variant === 'inline' && isEditing) {\n      setEditValue(optionValue);\n      // Auto-save when option is selected in inline editing mode\n      if (optionValue !== value) {\n        onChange && onChange(optionValue);\n        onSave && onSave(optionValue);\n      }\n      setIsEditing(false);\n    } else {\n      onChange && onChange(optionValue);\n    }\n    setIsOpen(false);\n  };\n  const handleSave = () => {\n    if (editValue !== value) {\n      onChange && onChange(editValue);\n      onSave && onSave(editValue);\n    }\n    setIsEditing(false);\n  };\n  const handleCancel = () => {\n    setEditValue(value);\n    setIsEditing(false);\n    onCancel && onCancel();\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSave();\n    } else if (e.key === 'Escape') {\n      handleCancel();\n    }\n  };\n  const getSelectedLabel = () => {\n    const option = options.find(opt => opt.value === (isEditing ? editValue : value));\n    return option ? option.label : '';\n  };\n\n  // Determine select classes based on state\n  const getSelectClasses = () => {\n    if (variant === 'inline') {\n      if (readOnly && !isEditing) {\n        return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-gray-50 cursor-pointer hover:bg-gray-100 transition text-left\";\n      } else if (isEditing) {\n        return \"w-full border !border-[#6C70FF] rounded-xl px-4 py-3 bg-white focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] transition text-left\";\n      }\n    }\n    return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-white focus:!border-[#6C70FF] focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] hover:bg-gray-50 transition text-left\";\n  };\n  const renderInlineSelect = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `relative ${isHovered && readOnly && !isEditing ? 'group' : ''}`,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      ref: selectRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getSelectClasses(),\n        onClick: handleFieldClick,\n        onKeyDown: isEditing ? handleKeyDown : undefined,\n        tabIndex: isEditing ? 0 : -1,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: getSelectedLabel() ? 'text-gray-900' : 'text-gray-500',\n          children: getSelectedLabel() || placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), (isEditing || variant === 'editable') && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M19 9l-7 7-7-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), variant === 'inline' && isHovered && readOnly && !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFieldClick,\n        className: \"absolute right-10 top-1/2 transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4 text-gray-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), variant === 'inline' && isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-10 right-0 flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          className: \"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 text-gray-600\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 text-gray-600\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M5 13l4 4L19 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option.value),\n          className: `w-full px-4 py-2 text-left hover:bg-gray-50 transition-colors ${option.value === (isEditing ? editValue : value) ? 'bg-blue-50 text-blue-600' : 'text-gray-700'}`,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n  const renderEditableSelect = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      ref: selectRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getSelectClasses(),\n        onClick: handleFieldClick,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: getSelectedLabel() ? 'text-gray-900' : 'text-gray-500',\n          children: getSelectedLabel() || placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M19 9l-7 7-7-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option.value),\n          className: `w-full px-4 py-2 text-left hover:bg-gray-50 transition-colors ${option.value === value ? 'bg-blue-50 text-blue-600' : 'text-gray-700'}`,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-1 font-medium text-gray-600\",\n      children: [label, required && ' *']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this), variant === 'inline' ? renderInlineSelect() : renderEditableSelect()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s(FormSelect, \"uLu1R8XToCKzoorqxVVSehXK3Ps=\");\n_c = FormSelect;\nvar _c;\n$RefreshReg$(_c, \"FormSelect\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","jsxDEV","_jsxDEV","FormSelect","label","value","onChange","options","placeholder","required","variant","readOnly","onSave","onCancel","className","_s","isOpen","setIsOpen","isHovered","setIsHovered","isEditing","setIsEditing","editValue","setEditValue","selectRef","handleClickOutside","event","current","contains","target","handleSave","document","addEventListener","removeEventListener","handleFieldClick","handleOptionClick","optionValue","handleCancel","handleKeyDown","e","key","getSelectedLabel","option","find","opt","getSelectClasses","renderInlineSelect","onMouseEnter","onMouseLeave","ref","children","onClick","onKeyDown","undefined","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d","map","renderEditableSelect","_c","$RefreshReg$"],"sources":["C:/Users/yacov.gorovoy/Documents/Cursor-workspace/procurement-prototype/src/components/FormSelect.js"],"sourcesContent":["// FormSelect for dropdowns\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Button from './Button';\r\n\r\n/**\r\n * FormSelect for dropdowns\r\n * @param {string} label - Label text\r\n * @param {string} value - Selected value\r\n * @param {function} onChange - Change handler\r\n * @param {array} options - Array of {label, value} objects\r\n * @param {string} placeholder - Placeholder text\r\n * @param {boolean} required - Required field\r\n * @param {string} variant - 'editable' or 'inline' (default: 'editable')\r\n * @param {boolean} readOnly - Read-only state (for inline variant)\r\n * @param {function} onSave - Save handler (for inline variant)\r\n * @param {function} onCancel - Cancel handler (for inline variant)\r\n * @param {string} className - Additional classes\r\n */\r\nexport default function FormSelect({\r\n  label,\r\n  value,\r\n  onChange,\r\n  options = [],\r\n  placeholder = \"Select an option\",\r\n  required = false,\r\n  variant = 'editable',\r\n  readOnly = false,\r\n  onSave,\r\n  onCancel,\r\n  className = ''\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editValue, setEditValue] = useState(value);\r\n  const selectRef = useRef(null);\r\n\r\n  // Update edit value when prop value changes\r\n  useEffect(() => {\r\n    setEditValue(value);\r\n  }, [value]);\r\n\r\n  // Handle click outside to save\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\r\n        if (isEditing) {\r\n          handleSave();\r\n        }\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen || isEditing) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isOpen, isEditing, editValue]);\r\n\r\n  const handleFieldClick = () => {\r\n    if (variant === 'inline' && readOnly && !isEditing) {\r\n      setIsEditing(true);\r\n      setEditValue(value);\r\n      // Auto-open dropdown when entering edit mode\r\n      setIsOpen(true);\r\n    } else if (variant === 'editable' || (variant === 'inline' && isEditing)) {\r\n      setIsOpen(!isOpen);\r\n    }\r\n  };\r\n\r\n  const handleOptionClick = (optionValue) => {\r\n    if (variant === 'inline' && isEditing) {\r\n      setEditValue(optionValue);\r\n      // Auto-save when option is selected in inline editing mode\r\n      if (optionValue !== value) {\r\n        onChange && onChange(optionValue);\r\n        onSave && onSave(optionValue);\r\n      }\r\n      setIsEditing(false);\r\n    } else {\r\n      onChange && onChange(optionValue);\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (editValue !== value) {\r\n      onChange && onChange(editValue);\r\n      onSave && onSave(editValue);\r\n    }\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditValue(value);\r\n    setIsEditing(false);\r\n    onCancel && onCancel();\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSave();\r\n    } else if (e.key === 'Escape') {\r\n      handleCancel();\r\n    }\r\n  };\r\n\r\n  const getSelectedLabel = () => {\r\n    const option = options.find(opt => opt.value === (isEditing ? editValue : value));\r\n    return option ? option.label : '';\r\n  };\r\n\r\n  // Determine select classes based on state\r\n  const getSelectClasses = () => {\r\n    if (variant === 'inline') {\r\n      if (readOnly && !isEditing) {\r\n        return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-gray-50 cursor-pointer hover:bg-gray-100 transition text-left\";\r\n      } else if (isEditing) {\r\n        return \"w-full border !border-[#6C70FF] rounded-xl px-4 py-3 bg-white focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] transition text-left\";\r\n      }\r\n    }\r\n    return \"w-full border !border-gray-300 rounded-xl px-4 py-3 bg-white focus:!border-[#6C70FF] focus:outline-none focus:ring-2 focus:ring-[#B4B8FF] hover:bg-gray-50 transition text-left\";\r\n  };\r\n\r\n  const renderInlineSelect = () => {\r\n    return (\r\n      <div \r\n        className={`relative ${isHovered && readOnly && !isEditing ? 'group' : ''}`}\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n        ref={selectRef}\r\n      >\r\n        <div\r\n          className={getSelectClasses()}\r\n          onClick={handleFieldClick}\r\n          onKeyDown={isEditing ? handleKeyDown : undefined}\r\n          tabIndex={isEditing ? 0 : -1}\r\n        >\r\n          <span className={getSelectedLabel() ? 'text-gray-900' : 'text-gray-500'}>\r\n            {getSelectedLabel() || placeholder}\r\n          </span>\r\n          {/* Only show chevron when editing or in editable mode */}\r\n          {(isEditing || variant === 'editable') && (\r\n            <svg className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\r\n            </svg>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Pencil icon on hover (read-only state) */}\r\n        {variant === 'inline' && isHovered && readOnly && !isEditing && (\r\n          <button\r\n            onClick={handleFieldClick}\r\n            className=\"absolute right-10 top-1/2 transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n          >\r\n            <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n            </svg>\r\n          </button>\r\n        )}\r\n\r\n        {/* X and V buttons (editing state) */}\r\n        {variant === 'inline' && isEditing && (\r\n          <div className=\"absolute -bottom-10 right-0 flex space-x-2\">\r\n            <button\r\n              onClick={handleCancel}\r\n              className=\"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\"\r\n            >\r\n              <svg className=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              onClick={handleSave}\r\n              className=\"w-8 h-8 bg-white border border-gray-200 rounded flex items-center justify-center hover:bg-gray-50 transition-colors shadow-sm\"\r\n            >\r\n              <svg className=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Dropdown options */}\r\n        {isOpen && (\r\n          <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\">\r\n            {options.map((option) => (\r\n              <button\r\n                key={option.value}\r\n                onClick={() => handleOptionClick(option.value)}\r\n                className={`w-full px-4 py-2 text-left hover:bg-gray-50 transition-colors ${\r\n                  option.value === (isEditing ? editValue : value) ? 'bg-blue-50 text-blue-600' : 'text-gray-700'\r\n                }`}\r\n              >\r\n                {option.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEditableSelect = () => {\r\n    return (\r\n      <div className=\"relative\" ref={selectRef}>\r\n        <div\r\n          className={getSelectClasses()}\r\n          onClick={handleFieldClick}\r\n        >\r\n          <span className={getSelectedLabel() ? 'text-gray-900' : 'text-gray-500'}>\r\n            {getSelectedLabel() || placeholder}\r\n          </span>\r\n          <svg className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </div>\r\n\r\n        {/* Dropdown options */}\r\n        {isOpen && (\r\n          <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\">\r\n            {options.map((option) => (\r\n              <button\r\n                key={option.value}\r\n                onClick={() => handleOptionClick(option.value)}\r\n                className={`w-full px-4 py-2 text-left hover:bg-gray-50 transition-colors ${\r\n                  option.value === value ? 'bg-blue-50 text-blue-600' : 'text-gray-700'\r\n                }`}\r\n              >\r\n                {option.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {label && <label className=\"block mb-1 font-medium text-gray-600\">{label}{required && ' *'}</label>}\r\n      {variant === 'inline' ? renderInlineSelect() : renderEditableSelect()}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}